# Welcome to the CPython BUILD file.

load("@rules_pkg//:pkg.bzl", "pkg_tar")

# Everything within or depending on Python will need these flags.
PY_COPTS = [
    "-fno-strict-aliasing",
    "-fwrapv",
    "-Iexternal/%s/Include" % (repository_name()[1:],),
    "-I$(GENDIR)/external/%s/Include" % (repository_name()[1:],),
]

# Flags for building the core python executable (i.e., not a shared extension).
CORE_COPTS = PY_COPTS + [
    "-DPy_BUILD_CORE",
]

PYTHON_HEADERS = [
    ":Include/pyconfig.h",
    "Include/Python-ast.h",
    "Include/Python.h",
    "Include/abstract.h",
    "Include/asdl.h",
    "Include/ast.h",
    "Include/bitset.h",
    "Include/boolobject.h",
    "Include/bufferobject.h",
    "Include/bytearrayobject.h",
    "Include/bytes_methods.h",
    "Include/bytesobject.h",
    "Include/cStringIO.h",
    "Include/cellobject.h",
    "Include/ceval.h",
    "Include/classobject.h",
    "Include/cobject.h",
    "Include/code.h",
    "Include/codecs.h",
    "Include/compile.h",
    "Include/complexobject.h",
    "Include/datetime.h",
    "Include/descrobject.h",
    "Include/dictobject.h",
    "Include/dtoa.h",
    "Include/enumobject.h",
    "Include/errcode.h",
    "Include/eval.h",
    "Include/fileobject.h",
    "Include/floatobject.h",
    "Include/frameobject.h",
    "Include/funcobject.h",
    "Include/genobject.h",
    "Include/graminit.h",
    "Include/grammar.h",
    "Include/import.h",
    "Include/intobject.h",
    "Include/intrcheck.h",
    "Include/iterobject.h",
    "Include/listobject.h",
    "Include/longintrepr.h",
    "Include/longobject.h",
    "Include/marshal.h",
    "Include/memoryobject.h",
    "Include/metagrammar.h",
    "Include/methodobject.h",
    "Include/modsupport.h",
    "Include/moduleobject.h",
    "Include/node.h",
    "Include/object.h",
    "Include/objimpl.h",
    "Include/opcode.h",
    "Include/osdefs.h",
    "Include/parsetok.h",
    "Include/patchlevel.h",
    "Include/pgen.h",
    "Include/pgenheaders.h",
    "Include/py_curses.h",
    "Include/pyarena.h",
    "Include/pycapsule.h",
    "Include/pyctype.h",
    "Include/pydebug.h",
    "Include/pyerrors.h",
    "Include/pyexpat.h",
    "Include/pyfpe.h",
    "Include/pygetopt.h",
    "Include/pymacconfig.h",
    "Include/pymactoolbox.h",
    "Include/pymath.h",
    "Include/pymem.h",
    "Include/pyport.h",
    "Include/pystate.h",
    "Include/pystrcmp.h",
    "Include/pystrtod.h",
    "Include/pythonrun.h",
    "Include/pythread.h",
    "Include/rangeobject.h",
    "Include/setobject.h",
    "Include/sliceobject.h",
    "Include/stringobject.h",
    "Include/structmember.h",
    "Include/structseq.h",
    "Include/symtable.h",
    "Include/sysmodule.h",
    "Include/timefuncs.h",
    "Include/token.h",
    "Include/traceback.h",
    "Include/tupleobject.h",
    "Include/ucnhash.h",
    "Include/unicodeobject.h",
    "Include/warnings.h",
    "Include/weakrefobject.h",
]

genrule(
    name = "include_headers",
    srcs = PYTHON_HEADERS,
    outs = ["include/python2.7/" + h.rpartition("/")[2] for h in PYTHON_HEADERS],
    cmd = "cp $(SRCS) $(RULEDIR)/include/python2.7/",
    visibility = ["//visibility:public"],
)

cc_library(
    name = "headers",
    hdrs = PYTHON_HEADERS,
    linkstatic = True,
)

# The main python executable including the interpreter and stdlib extension
# modules. Note that any file that's exporting Python C API symbols needs to be
# directly in srcs.
cc_binary(
    name = "bin/python",
    srcs = [
        "Modules/_bisectmodule.c",
        "Modules/_codecsmodule.c",
        "Modules/_collectionsmodule.c",
        "Modules/_csv.c",
        "Modules/_curses_panel.c",
        "Modules/_cursesmodule.c",
        "Modules/_functoolsmodule.c",
        "Modules/_hashopenssl.c",
        "Modules/_heapqmodule.c",
        "Modules/_hotshot.c",
        "Modules/_io/_iomodule.c",
        "Modules/_io/_iomodule.h",
        "Modules/_io/bufferedio.c",
        "Modules/_io/bytesio.c",
        "Modules/_io/fileio.c",
        "Modules/_io/iobase.c",
        "Modules/_io/stringio.c",
        "Modules/_io/textio.c",
        "Modules/_json.c",
        "Modules/_localemodule.c",
        "Modules/_lsprof.c",
        "Modules/_math.c",
        "Modules/_math.h",
        "Modules/_multiprocessing/connection.h",
        "Modules/_multiprocessing/multiprocessing.c",
        "Modules/_multiprocessing/multiprocessing.h",
        "Modules/_multiprocessing/semaphore.c",
        "Modules/_multiprocessing/socket_connection.c",
        "Modules/_randommodule.c",
        "Modules/_sre.c",
        "Modules/_ssl.c",
        "Modules/_ssl_data.h",
        "Modules/_struct.c",
        "Modules/_weakref.c",
        "Modules/addrinfo.h",
        "Modules/arraymodule.c",
        "Modules/audioop.c",
        "Modules/binascii.c",
        "Modules/bz2module.c",
        "Modules/cPickle.c",
        "Modules/cStringIO.c",
        "Modules/cjkcodecs/_codecs_cn.c",
        "Modules/cjkcodecs/_codecs_hk.c",
        "Modules/cjkcodecs/_codecs_iso2022.c",
        "Modules/cjkcodecs/_codecs_jp.c",
        "Modules/cjkcodecs/_codecs_kr.c",
        "Modules/cjkcodecs/_codecs_tw.c",
        "Modules/cjkcodecs/alg_jisx0201.h",
        "Modules/cjkcodecs/cjkcodecs.h",
        "Modules/cjkcodecs/emu_jisx0213_2000.h",
        "Modules/cjkcodecs/mappings_cn.h",
        "Modules/cjkcodecs/mappings_hk.h",
        "Modules/cjkcodecs/mappings_jisx0213_pair.h",
        "Modules/cjkcodecs/mappings_jp.h",
        "Modules/cjkcodecs/mappings_kr.h",
        "Modules/cjkcodecs/mappings_tw.h",
        "Modules/cjkcodecs/multibytecodec.c",
        "Modules/cjkcodecs/multibytecodec.h",
        "Modules/cmathmodule.c",
        "Modules/cryptmodule.c",
        "Modules/datetimemodule.c",
        "Modules/errnomodule.c",
        "Modules/fcntlmodule.c",
        "Modules/future_builtins.c",
        "Modules/gcmodule.c",
        "Modules/getpath.c",
        "Modules/grpmodule.c",
        "Modules/itertoolsmodule.c",
        "Modules/main.c",
        "Modules/mathmodule.c",
        "Modules/mmapmodule.c",
        "Modules/operator.c",
        "Modules/parsermodule.c",
        "Modules/posixmodule.c",
        "Modules/posixmodule.h",
        "Modules/pwdmodule.c",
        "Modules/pyexpat.c",
        "Modules/python.c",
        "Modules/readline.c",
        "Modules/resource.c",
        "Modules/rotatingtree.c",
        "Modules/rotatingtree.h",
        "Modules/selectmodule.c",
        "Modules/signalmodule.c",
        "Modules/socketmodule.c",
        "Modules/socketmodule.h",
        "Modules/spwdmodule.c",
        "Modules/sre.h",
        "Modules/sre_constants.h",
        "Modules/symtablemodule.c",
        "Modules/syslogmodule.c",
        "Modules/termios.c",
        "Modules/threadmodule.c",
        "Modules/timemodule.c",
        "Modules/unicodedata.c",
        "Modules/unicodedata_db.h",
        "Modules/unicodename_db.h",
        "Modules/zipimport.c",
        "Modules/zlibmodule.c",
        "Objects/abstract.c",
        "Objects/boolobject.c",
        "Objects/bufferobject.c",
        "Objects/bytearrayobject.c",
        "Objects/bytes_methods.c",
        "Objects/capsule.c",
        "Objects/cellobject.c",
        "Objects/classobject.c",
        "Objects/cobject.c",
        "Objects/codeobject.c",
        "Objects/complexobject.c",
        "Objects/descrobject.c",
        "Objects/dictobject.c",
        "Objects/enumobject.c",
        "Objects/exceptions.c",
        "Objects/fileobject.c",
        "Objects/floatobject.c",
        "Objects/frameobject.c",
        "Objects/funcobject.c",
        "Objects/genobject.c",
        "Objects/intobject.c",
        "Objects/iterobject.c",
        "Objects/listobject.c",
        "Objects/longobject.c",
        "Objects/memoryobject.c",
        "Objects/methodobject.c",
        "Objects/moduleobject.c",
        "Objects/object.c",
        "Objects/obmalloc.c",
        "Objects/rangeobject.c",
        "Objects/setobject.c",
        "Objects/sliceobject.c",
        "Objects/stringlib/count.h",
        "Objects/stringlib/ctype.h",
        "Objects/stringlib/fastsearch.h",
        "Objects/stringlib/find.h",
        "Objects/stringlib/formatter.h",
        "Objects/stringlib/localeutil.h",
        "Objects/stringlib/partition.h",
        "Objects/stringlib/split.h",
        "Objects/stringlib/string_format.h",
        "Objects/stringlib/stringdefs.h",
        "Objects/stringlib/transmogrify.h",
        "Objects/stringlib/unicodedefs.h",
        "Objects/stringobject.c",
        "Objects/structseq.c",
        "Objects/tupleobject.c",
        "Objects/typeobject.c",
        "Objects/unicodectype.c",
        "Objects/unicodeobject.c",
        "Objects/unicodetype_db.h",
        "Objects/weakrefobject.c",
        "Parser/acceler.c",
        "Parser/bitset.c",
        "Parser/firstsets.c",
        "Parser/grammar.c",
        "Parser/grammar1.c",
        "Parser/listnode.c",
        "Parser/metagrammar.c",
        "Parser/myreadline.c",
        "Parser/node.c",
        "Parser/parser.c",
        "Parser/parser.h",
        "Parser/parsetok.c",
        "Parser/pgen.c",
        "Parser/tokenizer.c",
        "Parser/tokenizer.h",
        "Python/Python-ast.c",
        "Python/_warnings.c",
        "Python/asdl.c",
        "Python/ast.c",
        "Python/bltinmodule.c",
        "Python/ceval.c",
        "Python/codecs.c",
        "Python/compile.c",
        "Python/dtoa.c",
        "Python/dynload_shlib.c",
        "Python/errors.c",
        "Python/formatter_string.c",
        "Python/formatter_unicode.c",
        "Python/frozen.c",
        "Python/frozenmain.c",
        "Python/future.c",
        "Python/getargs.c",
        "Python/getcompiler.c",
        "Python/getcopyright.c",
        "Python/getopt.c",
        "Python/getplatform.c",
        "Python/getversion.c",
        "Python/graminit.c",
        "Python/import.c",
        "Python/importdl.c",
        "Python/importdl.h",
        "Python/marshal.c",
        "Python/modsupport.c",
        "Python/mysnprintf.c",
        "Python/mystrtoul.c",
        "Python/opcode_targets.h",
        "Python/peephole.c",
        "Python/pyarena.c",
        "Python/pyctype.c",
        "Python/pyfpe.c",
        "Python/pymath.c",
        "Python/pystate.c",
        "Python/pystrcmp.c",
        "Python/pystrtod.c",
        "Python/pythonrun.c",
        "Python/random.c",
        "Python/structmember.c",
        "Python/symtable.c",
        "Python/sysmodule.c",
        "Python/thread.c",
        "Python/thread_pthread.h",
        "Python/traceback.c",
        ":modules-config",
    ],
    copts = CORE_COPTS + [
        '-DVERSION=\\"2.7\\"',
        '-DVPATH=\\"external/%s\\"' % (repository_name()[1:],),
        '-DPREFIX=\\"/usr\\"',
        '-DEXEC_PREFIX=\\"/usr\\"',
        '-DPYTHONPATH=\\":plat-linux2:lib-tk:lib-old\\"',
        '-DPLATFORM=\\"linux2\\"',
    ],
    linkopts = [
        "-pthread",
        "-ldl",
        "-lutil",
        "-lrt",
        "-lcrypt",
        "-Wl,--version-script=$(location @dbx_build_tools//thirdparty/cpython:symbols.lds)",
        "-Wl,--export-dynamic",
    ],
    visibility = ["//visibility:public"],
    deps = [
        ":_ctypes",
        ":_elementtree",
        ":_sqlite3",
        ":expat",
        ":headers",
        "@dbx_build_tools//thirdparty/cpython:buildinfo",
        "@dbx_build_tools//thirdparty/cpython:symbols.lds",
        "@net_zlib//:zlib",
        "@org_bzip_bzip2//:bz2",
        "@org_gnu_ncurses//:cursesw",
        "@org_gnu_ncurses//:panel",
        "@org_gnu_readline//:readline",
        "@org_openssl//:crypto_ssl",
    ],
)

# Next are some extension modules that we statically link in but can't be
# directly in the main rule because they require special copts or dependencies.

cc_library(
    name = "_sqlite3",
    srcs = [
        "Modules/_sqlite/cache.c",
        "Modules/_sqlite/cache.h",
        "Modules/_sqlite/connection.c",
        "Modules/_sqlite/connection.h",
        "Modules/_sqlite/cursor.c",
        "Modules/_sqlite/cursor.h",
        "Modules/_sqlite/microprotocols.c",
        "Modules/_sqlite/microprotocols.h",
        "Modules/_sqlite/module.c",
        "Modules/_sqlite/module.h",
        "Modules/_sqlite/prepare_protocol.c",
        "Modules/_sqlite/prepare_protocol.h",
        "Modules/_sqlite/row.c",
        "Modules/_sqlite/row.h",
        "Modules/_sqlite/sqlitecompat.h",
        "Modules/_sqlite/statement.c",
        "Modules/_sqlite/statement.h",
        "Modules/_sqlite/util.c",
        "Modules/_sqlite/util.h",
    ],
    copts = CORE_COPTS + [
        "-DSQLITE_OMIT_LOAD_EXTENSION",
        '-DMODULE_NAME=\\"sqlite3\\"',
    ],
    linkstatic = True,
    deps = [
        ":headers",
        "@org_sqlite//:sqlite3",
    ],
)

cc_library(
    name = "_elementtree",
    srcs = [
        "Modules/_elementtree.c",
    ],
    copts = CORE_COPTS + ["-DUSE_PYEXPAT_CAPI"],
    deps = [
        ":expat",
        ":headers",
    ],
)

cc_library(
    name = "_ctypes",
    srcs = [
        "Modules/_ctypes/_ctypes.c",
        "Modules/_ctypes/callbacks.c",
        "Modules/_ctypes/callproc.c",
        "Modules/_ctypes/cfield.c",
        "Modules/_ctypes/ctypes.h",
        "Modules/_ctypes/ctypes_dlfcn.h",
        "Modules/_ctypes/stgdict.c",
    ],
    copts = CORE_COPTS,
    deps = [
        ":headers",
        "@org_sourceware_libffi//:ffi",
    ],
)

# Python's vendorized expat library.
cc_library(
    name = "expat",
    srcs = [
        "Modules/expat/ascii.h",
        "Modules/expat/asciitab.h",
        "Modules/expat/iasciitab.h",
        "Modules/expat/internal.h",
        "Modules/expat/latin1tab.h",
        "Modules/expat/nametab.h",
        "Modules/expat/siphash.h",
        "Modules/expat/utf8tab.h",
        "Modules/expat/xmlparse.c",
        "Modules/expat/xmlrole.c",
        "Modules/expat/xmlrole.h",
        "Modules/expat/xmltok.c",
        "Modules/expat/xmltok.h",
        "Modules/expat/xmltok_impl.h",
    ],
    hdrs = [
        "Modules/expat/expat.h",
        "Modules/expat/expat_external.h",
        "Modules/expat/pyexpatns.h",
    ],
    copts = [
        "-DHAVE_MEMMOVE",
        "-DXML_NS",
        "-DXML_DTD",
        "-DXML_CONTEXT_BYTES=1234",
        "-DBYTEORDER=1234",
        # This prevents expat from barfing because it can't detect any
        # randomness syscall. Python takes care of injecting entropy.
        "-DXML_POOR_ENTROPY",
    ],
    strip_include_prefix = "Modules/expat",
    deps = [
        ":expat-textual-hdrs",
    ],
)

cc_library(
    name = "expat-textual-hdrs",
    textual_hdrs = [
        "Modules/expat/xmltok_impl.c",
        "Modules/expat/xmltok_ns.c",
    ],
)

# We compile test extensions into shared objects, so they aren't included in our
# production build. It's also good to have a few shared extensions to verify we
# can load them.

cc_binary(
    name = "Lib/_ctypes_test.so",
    srcs = ["Modules/_ctypes/_ctypes_test.c"],
    copts = PY_COPTS,
    linkshared = True,
    deps = [":headers"],
)

cc_binary(
    name = "Lib/_testcapi.so",
    srcs = [
        "Modules/_testcapimodule.c",
        "Modules/testcapi_long.h",
    ],
    copts = PY_COPTS,
    linkshared = True,
    deps = [":headers"],
)

cc_binary(
    name = "Lib/xxsubtype.so",
    srcs = ["Modules/xxsubtype.c"],
    copts = PY_COPTS,
    linkshared = True,
    deps = [":headers"],
)

# Static table of extension modules. All extension modules that are statically
# linked into the interpreter must be listed here, so that import can find them.
genrule(
    name = "modules-config",
    outs = ["Modules/config.c"],
    cmd = '''
cat <<'E_O_F' >$@
#include "Python.h"
extern void PyMarshal_Init(void);
extern void _PyWarnings_Init(void);
extern void init_ast(void);
extern void init_bisect(void);
extern void init_codecs(void);
extern void init_codecs_cn(void);
extern void init_codecs_hk(void);
extern void init_codecs_iso2022(void);
extern void init_codecs_jp(void);
extern void init_codecs_kr(void);
extern void init_codecs_tw(void);
extern void init_collections(void);
extern void init_csv(void);
extern void init_ctypes(void);
extern void init_curses(void);
extern void init_curses_panel(void);
extern void init_elementtree(void);
extern void init_functools(void);
extern void init_hashlib(void);
extern void init_heapq(void);
extern void init_hotshot(void);
extern void init_io(void);
extern void init_json(void);
extern void init_locale(void);
extern void init_lsprof(void);
extern void init_multibytecodec(void);
extern void init_multiprocessing(void);
extern void init_random(void);
extern void init_socket(void);
extern void init_sqlite3(void);
extern void init_sre(void);
extern void init_ssl(void);
extern void init_struct(void);
extern void init_symtable(void);
extern void init_weakref(void);
extern void initarray(void);
extern void initaudioop(void);
extern void initbinascii(void);
extern void initbz2(void);
extern void initcPickle(void);
extern void initcStringIO(void);
extern void initcmath(void);
extern void initcrypt(void);
extern void initdatetime(void);
extern void initerrno(void);
extern void initfcntl(void);
extern void initfuture_builtins(void);
extern void initgc(void);
extern void initgrp(void);
extern void initimp(void);
extern void inititertools(void);
extern void initmath(void);
extern void initmmap(void);
extern void initoperator(void);
extern void initparser(void);
extern void initposix(void);
extern void initpwd(void);
extern void initpyexpat(void);
extern void initreadline(void);
extern void initresource(void);
extern void initselect(void);
extern void initsignal(void);
extern void initspwd(void);
extern void initsyslog(void);
extern void inittermios(void);
extern void initthread(void);
extern void inittime(void);
extern void initunicodedata(void);
extern void initzipimport(void);
extern void initzlib(void);

struct _inittab _PyImport_Inittab[] = {
    {"__builtin__", NULL},
    {"__main__", NULL},
    {"_ast", init_ast},
    {"_bisect", init_bisect},
    {"_codecs", init_codecs},
    {"_codecs_cn", init_codecs_cn},
    {"_codecs_hk", init_codecs_hk},
    {"_codecs_iso2022", init_codecs_iso2022},
    {"_codecs_jp", init_codecs_jp},
    {"_codecs_kr", init_codecs_kr},
    {"_codecs_tw", init_codecs_tw},
    {"_collections", init_collections},
    {"_csv", init_csv},
    {"_ctypes", init_ctypes},
    {"_curses", init_curses},
    {"_curses_panel", init_curses_panel},
    {"_elementtree", init_elementtree},
    {"_functools", init_functools},
    {"_hashlib", init_hashlib},
    {"_heapq", init_heapq},
    {"_hotshot", init_hotshot},
    {"_io", init_io},
    {"_json", init_json},
    {"_locale", init_locale},
    {"_lsprof", init_lsprof},
    {"_multibytecodec", init_multibytecodec},
    {"_multiprocessing", init_multiprocessing},
    {"_random", init_random},
    {"_socket", init_socket},
    {"_sqlite3", init_sqlite3},
    {"_sre", init_sre},
    {"_ssl", init_ssl},
    {"_struct", init_struct},
    {"_symtable", init_symtable},
    {"_warnings", _PyWarnings_Init},
    {"_weakref", init_weakref},
    {"array", initarray},
    {"audioop", initaudioop},
    {"binascii", initbinascii},
    {"bz2", initbz2},
    {"cPickle", initcPickle},
    {"cStringIO", initcStringIO},
    {"cmath", initcmath},
    {"crypt", initcrypt},
    {"datetime", initdatetime},
    {"errno", initerrno},
    {"exceptions", NULL},
    {"fcntl", initfcntl},
    {"future_builtins", initfuture_builtins},
    {"gc", initgc},
    {"grp", initgrp},
    {"imp", initimp},
    {"itertools", inititertools},
    {"marshal", PyMarshal_Init},
    {"math", initmath},
    {"mmap", initmmap},
    {"operator", initoperator},
    {"parser", initparser},
    {"posix", initposix},
    {"pwd", initpwd},
    {"pyexpat", initpyexpat},
    {"readline", initreadline},
    {"resource", initresource},
    {"select", initselect},
    {"signal", initsignal},
    {"spwd", initspwd},
    {"sys", NULL},
    {"syslog", initsyslog},
    {"termios", inittermios},
    {"thread", initthread},
    {"time", inittime},
    {"unicodedata", initunicodedata},
    {"zipimport", initzipimport},
    {"zlib", initzlib},
    /* Sentinel */
    {0, 0}
};
E_O_F
''',
)

# Zipping of the stdlib.

genrule(
    name = "test-stdlib-zip",
    srcs = glob(["Lib/**"]) + [
        ":sysconfigdata",
        ":Lib/_ctypes_test.so",
        ":Lib/_testcapi.so",
        ":Lib/xxsubtype.so",
    ],
    outs = ["test-stdlib.zip"],
    cmd = "$(location @dbx_build_tools//thirdparty/cpython:zip-stdlib) sloppy $@ $(SRCS)",
    output_to_bindir = True,
    tools = ["@dbx_build_tools//thirdparty/cpython:zip-stdlib"],
)

filegroup(
    name = "production-stdlib",
    srcs = glob(
        ["Lib/**/*.py"],
        exclude = [
            "Lib/ensurepip/**",
            "Lib/idlelib/**",
            "Lib/lib-tk/**",
            "Lib/plat-*/**",
            "**/test/**",
            "**/tests/**",
        ],
    ) + [":sysconfigdata"],
)

genrule(
    name = "stdlib-zip",
    srcs = [
        ":bin/python",
        ":production-stdlib",
        "Lib/lib2to3/Grammar.txt",
        "Lib/lib2to3/PatternGrammar.txt",
    ],
    outs = ["lib/python27.zip"],
    cmd = """
export ASAN_OPTIONS=detect_leaks=0
mkdir $(@D)/python2.7
touch $(@D)/python2.7/os.py
# First, create an initial stdlib zip with the system Python.
$(location @dbx_build_tools//thirdparty/cpython:zip-stdlib) sloppy $@ $(locations :production-stdlib)
# Then do the final zip with our python using the temporary stdlib.
cp $(location :bin/python) $(location :bin/python)-prime
mkdir -p tmp/Lib/lib2to3
gram=$$($(location :bin/python)-prime $(location @dbx_build_tools//thirdparty/cpython:gen_2to3_grammar.py) $(location Lib/lib2to3/Grammar.txt))
patgram=$$($(location :bin/python)-prime $(location @dbx_build_tools//thirdparty/cpython:gen_2to3_grammar.py) $(location Lib/lib2to3/PatternGrammar.txt))
$(location :bin/python)-prime $(location @dbx_build_tools//thirdparty/cpython:zip_stdlib.py) final $@ $(locations :production-stdlib) $$gram $$patgram
""",
    output_to_bindir = True,
    tools = [
        "@dbx_build_tools//thirdparty/cpython:gen_2to3_grammar.py",
        "@dbx_build_tools//thirdparty/cpython:zip-stdlib",
        "@dbx_build_tools//thirdparty/cpython:zip_stdlib.py",
    ],
)

# The final package.
_tar_files = {
    ":bin/python": "bin/python",
    ":stdlib-zip": "lib/python27.zip",
}

_tar_files.update({h: "include/python2.7/" + h.rpartition("/")[2] for h in PYTHON_HEADERS})

pkg_tar(
    name = "drte-python",
    empty_files = [
        # Sentinels for Python to find its prefix.
        "lib/python2.7/os.py",
        "lib/python2.7/lib-dynload/.SENTINEL",
    ],
    extension = "tar.xz",
    files = _tar_files,
    visibility = ["//visibility:public"],
)

genrule(
    name = "runtime_sentinels",
    outs = [
        "lib/python2.7/os.py",
        "lib/python2.7/lib-dynload/.SENTINEL",
    ],
    cmd = "touch $(OUTS)",
)

filegroup(
    name = "runtime",
    srcs = [
        "bin/python",
        "lib/python2.7/lib-dynload/.SENTINEL",
        "lib/python2.7/os.py",
        "lib/python27.zip",
    ],
    visibility = ["//visibility:public"],
)

# CPython dumps every variable in its Makefile into Lib/_sysconfigdata.py and
# then exposes the resulting dictionary as an API through the sysconfig and
# distutils.sysconfig modules. This is, of course, a terrible idea. What follows
# is a small subset of that experimentally shown to allow distutils to work. In
# practice, we override most of these things in vpip.
genrule(
    name = "sysconfigdata",
    outs = ["Lib/_sysconfigdata.py"],
    cmd = """
cat <<'E_O_F' >$@
build_time_vars = {
 'Py_ENABLE_SHARED': 0,
 'LIBDIR': '/usr/local/lib',
 'SO': '.so',
 'SHLIBS': '-lpthread -ldl  -lutil',
 'BINDIR': '/usr/local/bin',
 'VERSION': '2.7',
 'EXE': '',
 'exec_prefix': '/usr/local',
 'host': 'x86_64-pc-linux-gnu',
 'prefix': '/usr/local',
 'CC': 'gcc -pthread',
 'CCSHARED': '-fPIC',
 'OPT': '-fno-strict-aliasing -DNDEBUG -fwrapv -O3 -Wall -Wstrict-prototypes',
 'CFLAGS': '-fno-strict-aliasing -O2 -DNDEBUG -fwrapv -O3 -Wall -Wstrict-prototypes',
 'CFLAGSFORSHARED': '',
 'CXX': 'g++ -pthread',
 'LDSHARED': 'gcc -pthread -shared',
 'AR': 'ar',
 'ARFLAGS': 'rc',
 'WITH_PYMALLOC': 1,
 'Py_DEBUG': 0,
 'Py_UNICODE_SIZE': 4,
}
E_O_F
""",
)

# ./configure --enable-unicode=ucs4
genrule(
    name = "pyconfig-h",
    outs = ["Include/pyconfig.h"],
    cmd = '''
cat <<'E_O_F' >$@
#ifndef Py_PYCONFIG_H
#define Py_PYCONFIG_H
#define DOUBLE_IS_LITTLE_ENDIAN_IEEE754 1
#define ENABLE_IPV6 1
#define HAVE_ACOSH 1
#define HAVE_ADDRINFO 1
#define HAVE_ALARM 1
#define HAVE_ALLOCA_H 1
#define HAVE_ASINH 1
#define HAVE_ASM_TYPES_H 1
#define HAVE_ATANH 1
#define HAVE_BIND_TEXTDOMAIN_CODESET 1
#define HAVE_C99_BOOL 1
#define HAVE_CHOWN 1
#define HAVE_CHROOT 1
#define HAVE_CLOCK 1
#define HAVE_COMPUTED_GOTOS 1
#define HAVE_CONFSTR 1
#define HAVE_COPYSIGN 1
#define HAVE_CRYPT_H 1
#define HAVE_CTERMID 1
#define HAVE_CURSES_FILTER 1
#define HAVE_CURSES_H 1
#define HAVE_CURSES_HAS_KEY 1
#define HAVE_CURSES_IMMEDOK 1
#define HAVE_CURSES_IS_PAD 1
#define HAVE_CURSES_IS_TERM_RESIZED 1
#define HAVE_CURSES_RESIZETERM 1
#define HAVE_CURSES_RESIZE_TERM 1
#define HAVE_CURSES_SYNCOK 1
#define HAVE_CURSES_TYPEAHEAD 1
#define HAVE_CURSES_USE_ENV 1
#define HAVE_CURSES_WCHGAT 1
#define HAVE_DECL_ISFINITE 1
#define HAVE_DECL_ISINF 1
#define HAVE_DECL_ISNAN 1
#define HAVE_DEVICE_MACROS 1
#define HAVE_DEV_PTMX 1
#define HAVE_DIRENT_H 1
#define HAVE_DLFCN_H 1
#define HAVE_DLOPEN 1
#define HAVE_DUP2 1
#define HAVE_DYNAMIC_LOADING 1
#define HAVE_EPOLL 1
#define HAVE_ERF 1
#define HAVE_ERFC 1
#define HAVE_ERRNO_H 1
#define HAVE_EXECV 1
#define HAVE_EXPM1 1
#define HAVE_FCHDIR 1
#define HAVE_FCHMOD 1
#define HAVE_FCHOWN 1
#define HAVE_FCNTL_H 1
#define HAVE_FDATASYNC 1
#define HAVE_FINITE 1
#define HAVE_FLOCK 1
#define HAVE_FORK 1
#define HAVE_FORKPTY 1
#define HAVE_FPATHCONF 1
#define HAVE_FSEEKO 1
#define HAVE_FSTATVFS 1
#define HAVE_FSYNC 1
#define HAVE_FTELLO 1
#define HAVE_FTIME 1
#define HAVE_FTRUNCATE 1
#define HAVE_GAI_STRERROR 1
#define HAVE_GAMMA 1
#define HAVE_GCC_ASM_FOR_X87 1
#define HAVE_GETADDRINFO 1
#define HAVE_GETCWD 1
#define HAVE_GETC_UNLOCKED 1
#define HAVE_GETENTROPY 1
#define HAVE_GETGROUPS 1
#define HAVE_GETHOSTBYNAME_R 1
#define HAVE_GETHOSTBYNAME_R_6_ARG 1
#define HAVE_GETITIMER 1
#define HAVE_GETLOADAVG 1
#define HAVE_GETLOGIN 1
#define HAVE_GETNAMEINFO 1
#define HAVE_GETPAGESIZE 1
#define HAVE_GETPEERNAME 1
#define HAVE_GETPGID 1
#define HAVE_GETPGRP 1
#define HAVE_GETPID 1
#define HAVE_GETPRIORITY 1
#define HAVE_GETPWENT 1
#define HAVE_GETRESGID 1
#define HAVE_GETRESUID 1
#define HAVE_GETSID 1
#define HAVE_GETSPENT 1
#define HAVE_GETSPNAM 1
#define HAVE_GETTIMEOFDAY 1
#define HAVE_GETWD 1
#define HAVE_GRP_H 1
#define HAVE_HSTRERROR 1
#define HAVE_HYPOT 1
#define HAVE_INET_ATON 1
#define HAVE_INET_PTON 1
#define HAVE_INITGROUPS 1
#define HAVE_INT32_T 1
#define HAVE_INT64_T 1
#define HAVE_INTTYPES_H 1
#define HAVE_KILL 1
#define HAVE_KILLPG 1
#define HAVE_LANGINFO_H 1
#define HAVE_LCHOWN 1
#define HAVE_LGAMMA 1
#define HAVE_LIBDL 1
#define HAVE_LIBINTL_H 1
#define HAVE_LIBREADLINE 1
#define HAVE_LINK 1
#define HAVE_LINUX_NETLINK_H 1
#define HAVE_LINUX_TIPC_H 1
#define HAVE_LOG1P 1
#define HAVE_LONG_DOUBLE 1
#define HAVE_LONG_LONG 1
#define HAVE_LSTAT 1
#define HAVE_MAKEDEV 1
#define HAVE_MEMMOVE 1
#define HAVE_MEMORY_H 1
#define HAVE_MKFIFO 1
#define HAVE_MKNOD 1
#define HAVE_MKTIME 1
#define HAVE_MMAP 1
#define HAVE_MREMAP 1
#define HAVE_NCURSES_H 1
#define HAVE_NETPACKET_PACKET_H 1
#define HAVE_NICE 1
#define HAVE_OPENPTY 1
#define HAVE_PATHCONF 1
#define HAVE_PAUSE 1
#define HAVE_POLL 1
#define HAVE_POLL_H 1
#define HAVE_PROTOTYPES 1
#define HAVE_PTHREAD_ATFORK 1
#define HAVE_PTHREAD_H 1
#define HAVE_PTHREAD_SIGMASK 1
#define HAVE_PTY_H 1
#define HAVE_PUTENV 1
#define HAVE_READLINK 1
#define HAVE_REALPATH 1
#define HAVE_RL_CALLBACK 1
#define HAVE_RL_CATCH_SIGNAL 1
#define HAVE_RL_COMPLETION_APPEND_CHARACTER 1
#define HAVE_RL_COMPLETION_DISPLAY_MATCHES_HOOK 1
#define HAVE_RL_COMPLETION_MATCHES 1
#define HAVE_RL_COMPLETION_SUPPRESS_APPEND 1
#define HAVE_RL_PRE_INPUT_HOOK 1
#define HAVE_RL_RESIZE_TERMINAL 1
#define HAVE_ROUND 1
#define HAVE_SELECT 1
#define HAVE_SEM_GETVALUE 1
#define HAVE_SEM_OPEN 1
#define HAVE_SEM_TIMEDWAIT 1
#define HAVE_SEM_UNLINK 1
#define HAVE_SETEGID 1
#define HAVE_SETEUID 1
#define HAVE_SETGID 1
#define HAVE_SETGROUPS 1
#define HAVE_SETITIMER 1
#define HAVE_SETLOCALE 1
#define HAVE_SETPGID 1
#define HAVE_SETPGRP 1
#define HAVE_SETREGID 1
#define HAVE_SETRESGID 1
#define HAVE_SETRESUID 1
#define HAVE_SETREUID 1
#define HAVE_SETSID 1
#define HAVE_SETUID 1
#define HAVE_SETVBUF 1
#define HAVE_SHADOW_H 1
#define HAVE_SIGACTION 1
#define HAVE_SIGINTERRUPT 1
#define HAVE_SIGNAL_H 1
#define HAVE_SIGRELSE 1
#define HAVE_SNPRINTF 1
#define HAVE_SOCKADDR_STORAGE 1
#define HAVE_SOCKETPAIR 1
#define HAVE_SPAWN_H 1
#define HAVE_SSIZE_T 1
#define HAVE_STATVFS 1
#define HAVE_STAT_TV_NSEC 1
#define HAVE_STDARG_PROTOTYPES 1
#define HAVE_STDINT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRDUP 1
#define HAVE_STRFTIME 1
#define HAVE_STRINGS_H 1
#define HAVE_STRING_H 1
#define HAVE_STRUCT_STAT_ST_BLKSIZE 1
#define HAVE_STRUCT_STAT_ST_BLOCKS 1
#define HAVE_STRUCT_STAT_ST_RDEV 1
#define HAVE_STRUCT_TM_TM_ZONE 1
#define HAVE_SYMLINK 1
#define HAVE_SYSCONF 1
#define HAVE_SYSEXITS_H 1
#define HAVE_SYS_EPOLL_H 1
#define HAVE_SYS_FILE_H 1
#define HAVE_SYS_PARAM_H 1
#define HAVE_SYS_POLL_H 1
#define HAVE_SYS_RESOURCE_H 1
#define HAVE_SYS_SELECT_H 1
#define HAVE_SYS_SOCKET_H 1
#define HAVE_SYS_STATVFS_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_SYS_SYSMACROS_H 1
#define HAVE_SYS_TIMES_H 1
#define HAVE_SYS_TIME_H 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_UN_H 1
#define HAVE_SYS_UTSNAME_H 1
#define HAVE_SYS_WAIT_H 1
#define HAVE_TCGETPGRP 1
#define HAVE_TCSETPGRP 1
#define HAVE_TEMPNAM 1
#define HAVE_TERMIOS_H 1
#define HAVE_TERM_H 1
#define HAVE_TGAMMA 1
#define HAVE_TIMEGM 1
#define HAVE_TIMES 1
#define HAVE_TMPFILE 1
#define HAVE_TMPNAM 1
#define HAVE_TMPNAM_R 1
#define HAVE_TM_ZONE 1
#define HAVE_TRUNCATE 1
#define HAVE_UINT32_T 1
#define HAVE_UINT64_T 1
#define HAVE_UINTPTR_T 1
#define HAVE_UNAME 1
#define HAVE_UNISTD_H 1
#define HAVE_UNSETENV 1
#define HAVE_UTIMES 1
#define HAVE_UTIME_H 1
#define HAVE_WAIT3 1
#define HAVE_WAIT4 1
#define HAVE_WAITPID 1
#define HAVE_WCHAR_H 1
#define HAVE_WCSCOLL 1
#define HAVE_WORKING_TZSET 1
#define HAVE_ZLIB_COPY 1
#define MVWDELCH_IS_EXPRESSION 1
#define PTHREAD_SYSTEM_SCHED_SUPPORTED 1
#define PY_FORMAT_LONG_LONG "ll"
#define PY_FORMAT_SIZE_T "z"
#define Py_UNICODE_SIZE 4
#define Py_USING_UNICODE 1
#define RETSIGTYPE void
#define SHLIB_EXT ".so"
#define SIZEOF_DOUBLE 8
#define SIZEOF_FLOAT 4
#define SIZEOF_FPOS_T 16
#define SIZEOF_INT 4
#define SIZEOF_LONG 8
#define SIZEOF_LONG_DOUBLE 16
#define SIZEOF_LONG_LONG 8
#define SIZEOF_OFF_T 8
#define SIZEOF_PID_T 4
#define SIZEOF_PTHREAD_T 8
#define SIZEOF_SHORT 2
#define SIZEOF_SIZE_T 8
#define SIZEOF_TIME_T 8
#define SIZEOF_UINTPTR_T 8
#define SIZEOF_VOID_P 8
#define SIZEOF_WCHAR_T 4
#define SIZEOF__BOOL 1
#define STDC_HEADERS 1
#define SYS_SELECT_WITH_SYS_TIME 1
#define TANH_PRESERVES_ZERO_SIGN 1
#define TIME_WITH_SYS_TIME 1
#ifndef _ALL_SOURCE
# define _ALL_SOURCE 1
#endif
#ifndef _GNU_SOURCE
# define _GNU_SOURCE 1
#endif
#ifndef _POSIX_PTHREAD_SEMANTICS
# define _POSIX_PTHREAD_SEMANTICS 1
#endif
#ifndef _TANDEM_SOURCE
# define _TANDEM_SOURCE 1
#endif
#ifndef __EXTENSIONS__
# define __EXTENSIONS__ 1
#endif
#define VA_LIST_IS_ARRAY 1
#define WINDOW_HAS_FLAGS 1
#define WITH_DOC_STRINGS 1
#define WITH_PYMALLOC 1
#define WITH_THREAD 1
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
# endif
#endif
#define _BSD_TYPES 1
#define _DARWIN_C_SOURCE 1
#define _FILE_OFFSET_BITS 64
#define _GNU_SOURCE 1
#define _LARGEFILE_SOURCE 1
#define _NETBSD_SOURCE 1
#define _POSIX_C_SOURCE 200112L
#define _XOPEN_SOURCE 600
#define _XOPEN_SOURCE_EXTENDED 1
#define __BSD_VISIBLE 1
#ifndef __CHAR_UNSIGNED__
#endif
#define __EXTENSIONS__ 1
#if defined(__USLC__) && defined(__SCO_VERSION__)
#define STRICT_SYSV_CURSES /* Don't use ncurses extensions */
#endif
#endif /*Py_PYCONFIG_H*/
E_O_F
''',
)
